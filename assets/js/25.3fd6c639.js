(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{349:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"绘制圆形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制圆形"}},[t._v("#")]),t._v(" 绘制圆形")]),t._v(" "),a("blockquote",[a("p",[t._v("角度与弧度的js表达式")]),t._v(" "),a("p",[t._v("radians=(Math.PI/180)*degrees。")])]),t._v(" "),a("h2",{attrs:{id:"canvas绘制圆形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas绘制圆形"}},[t._v("#")]),t._v(" canvas绘制圆形")]),t._v(" "),a("p",[t._v("​\tarc(x, y, radius, startAngle, endAngle, anticlockwise)\n​\t\t\t画一个以（x,y）为圆心的以radius为半径的圆弧（圆），从startAngle开始到endAngle结束，\n​\t\t\t按照anticlockwise给定的方向（默认为顺时针）来生成。\n​\t\t\tture：逆时针\n​\t\t\tfalse:顺时针\n​")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\tx,y为绘制圆弧所在圆上的圆心坐标\n\tradius为半径\n\tstartAngle以及endAngle参数用弧度定义了开始以及结束的弧度。这些都是以x轴为基准\n\t参数anticlockwise 为一个布尔值。为true时，是逆时针方向，否则顺时针方向。\n")])])]),a("h2",{attrs:{id:"arcto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arcto"}},[t._v("#")]),t._v(" arcTo")]),t._v(" "),a("p",[t._v("​\tarcTo(x1, y1, x2, y2, radius)\n​\t根据给定的控制点和半径画一段圆弧\n​\t肯定会从(x1 y1)  但不一定经过(x2 y2);(x2 y2)只是控制一个方向\n​")])])}),[],!1,null,null,null);a.default=e.exports}}]);